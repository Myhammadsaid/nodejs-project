const Emitter = require('events')

const emitter = new Emitter()

const callback = (data, second, third) => {
	console.log('–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ ' + data)
	console.log('–í—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç ' + second)
}

emitter.once('message', callback)

emitter.emit('message', '–ü—Ä–∏–≤–µ—Ç', '2')
emitter.emit('message')
emitter.emit('message')
emitter.emit('message')
emitter.emit('message')

emitter.removeAllListeners()
emitter.removeListener('message', callback)

const MESSAGE = process.env.message || ''

if (MESSAGE) {
	emitter.emit('message', MESSAGE, 123)
} else {
	emitter.emit('message', '–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ')
}

// –ö–æ–≥–¥–∞ —É–¥–æ–±–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?
// http
// websockets
// long pulling
// clusters

// üîÅ emitter.on ‚Äî –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ
function —Å–ª—É—à–∞—Ç–µ–ª—å1(—Å–æ–æ–±—â–µ–Ω–∏–µ) {
	console.log('üü¢ –°–ª—É—à–∞—Ç–µ–ª—å 1 –ø–æ–ª—É—á–∏–ª:', —Å–æ–æ–±—â–µ–Ω–∏–µ)
}
emitter.on('—Å–æ–æ–±—â–µ–Ω–∏–µ', —Å–ª—É—à–∞—Ç–µ–ª—å1)

// üîÇ emitter.once ‚Äî —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
emitter.once('—Å–æ–æ–±—â–µ–Ω–∏–µ', —Å–æ–æ–±—â–µ–Ω–∏–µ => {
	console.log('üîµ –°–ª—É—à–∞—Ç–µ–ª—å 2 (once) –ø–æ–ª—É—á–∏–ª:', —Å–æ–æ–±—â–µ–Ω–∏–µ)
})

// ‚úÖ emitter.emit ‚Äî –≤—ã–∑—ã–≤–∞–µ—Ç (–∏—Å–ø—É—Å–∫–∞–µ—Ç) —Å–æ–±—ã—Ç–∏–µ
console.log('\nüëâ –ü–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤ —Å–æ–±—ã—Ç–∏—è')
emitter.emit('—Å–æ–æ–±—â–µ–Ω–∏–µ', '–ü—Ä–∏–≤–µ—Ç –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑')

console.log('\nüëâ –í—Ç–æ—Ä–æ–π –≤—ã–∑–æ–≤ —Å–æ–±—ã—Ç–∏—è')
emitter.emit('—Å–æ–æ–±—â–µ–Ω–∏–µ', '–ü—Ä–∏–≤–µ—Ç –≤–æ –≤—Ç–æ—Ä–æ–π —Ä–∞–∑')

// ‚ùå emitter.off ‚Äî –æ—Ç–ø–∏—Å–∫–∞ –æ—Ç —Å–æ–±—ã—Ç–∏—è
emitter.off('—Å–æ–æ–±—â–µ–Ω–∏–µ', —Å–ª—É—à–∞—Ç–µ–ª—å1)

console.log('\nüëâ –¢—Ä–µ—Ç–∏–π –≤—ã–∑–æ–≤ —Å–æ–±—ã—Ç–∏—è (–ø–æ—Å–ª–µ –æ—Ç–ø–∏—Å–∫–∏)')
emitter.emit('—Å–æ–æ–±—â–µ–Ω–∏–µ', '–ü—Ä–∏–≤–µ—Ç –≤ —Ç—Ä–µ—Ç–∏–π —Ä–∞–∑')

// üìä emitter.listenerCount ‚Äî —Å–∫–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å
const –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ = emitter.listenerCount('—Å–æ–æ–±—â–µ–Ω–∏–µ')
console.log('\nüë• –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ "—Å–æ–æ–±—â–µ–Ω–∏–µ":', –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)

const Logger = require('./logger')
const logger = new Logger('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω')
logger.log()
